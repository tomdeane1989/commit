generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model companies {
  id                      String             @id @default(cuid())
  name                    String
  domain                  String?            @unique
  subscription            String             @default("trial")
  fiscal_year_start       Int                @default(1)
  default_commission_rate Decimal            @default(0.0500) @db.Decimal(5, 4)
  created_at              DateTime           @default(now())
  updated_at              DateTime           @updatedAt
  ai_insights             Json?
  forecasting_model       String?
  activity_log            activity_log[]
  commissions             commissions[]
  crm_integrations        crm_integrations[]
  deals                   deals[]
  forecasts               forecasts[]
  targets                 targets[]
  teams                   teams[]
  users                   users[]
}

model users {
  id                   String                 @id @default(cuid())
  email                String                 @unique
  password             String
  first_name           String
  last_name            String
  role                 String                 @default("sales_rep")
  is_admin             Boolean                @default(false)
  is_active            Boolean                @default(true)
  hire_date            DateTime?
  territory            String?
  manager_id           String?
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  performance_profile  Json?
  prediction_accuracy  Decimal?               @db.Decimal(5, 2)
  company_id           String
  is_manager           Boolean                @default(false)
  activity_log         activity_log[]
  commissions          commissions[]
  deal_categorizations deal_categorizations[]
  deals                deals[]
  forecasts            forecasts[]
  targets              targets[]
  added_team_members   team_members[]         @relation("TeamMemberAdder")
  team_memberships     team_members[]
  created_teams        teams[]                @relation("TeamCreator")
  led_teams            teams[]                @relation("TeamLead")
  company              companies              @relation(fields: [company_id], references: [id])
  manager              users?                 @relation("UserManager", fields: [manager_id], references: [id])
  reports              users[]                @relation("UserManager")

  @@index([company_id])
  @@index([manager_id])
  @@index([role])
}

model deals {
  id                   String                 @id @default(cuid())
  deal_name            String
  account_name         String
  amount               Decimal                @db.Decimal(12, 2)
  probability          Int                    @default(0)
  status               String                 @default("open")
  stage                String?
  close_date           DateTime
  closed_date          DateTime?
  created_date         DateTime
  crm_id               String?
  crm_type             String                 @default("manual")
  crm_url              String?
  last_sync            DateTime?
  ai_probability       Int?
  ai_close_date        DateTime?
  ai_insights          Json?
  similar_deals        Json?
  deal_age_days        Int?
  stage_history        Json?
  amount_changes       Json?
  projected_commission Decimal?               @default(0) @db.Decimal(12, 2)
  actual_commission    Decimal?               @default(0) @db.Decimal(12, 2)
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  user_id              String
  company_id           String
  commission_details   commission_details[]
  deal_categorizations deal_categorizations[]
  company              companies              @relation(fields: [company_id], references: [id])
  user                 users                  @relation(fields: [user_id], references: [id])

  @@unique([crm_id, company_id], name: "unique_crm_deal_per_company")
  @@index([user_id])
  @@index([company_id])
  @@index([status])
  @@index([close_date])
  @@index([crm_id])
  @@index([amount])
  @@index([probability])
  @@index([projected_commission])
  @@index([actual_commission])
  @@index([user_id, status, close_date])
  @@index([company_id, created_at])
  @@index([user_id, crm_type])
}

model deal_categorizations {
  id              String    @id @default(cuid())
  category        String
  confidence_note String?
  created_at      DateTime  @default(now())
  actual_outcome  String?
  outcome_date    DateTime?
  deal_id         String
  user_id         String
  deal            deals     @relation(fields: [deal_id], references: [id])
  user            users     @relation(fields: [user_id], references: [id])

  @@index([deal_id])
  @@index([user_id])
  @@index([category])
  @@index([created_at])
}

model targets {
  id                          String        @id @default(cuid())
  period_type                 String
  period_start                DateTime
  period_end                  DateTime
  quota_amount                Decimal       @db.Decimal(12, 2)
  commission_rate             Decimal       @db.Decimal(5, 4)
  commission_payment_schedule String        @default("monthly")
  is_active                   Boolean       @default(true)
  role                        String?
  team_id                     String?
  team_target                 Boolean       @default(false)
  distribution_method         String?
  distribution_config         Json?
  parent_target_id            String?
  ai_forecast_amount          Decimal?      @db.Decimal(12, 2)
  ai_confidence               Decimal?      @db.Decimal(5, 2)
  ai_updated_at               DateTime?
  created_at                  DateTime      @default(now())
  updated_at                  DateTime      @updatedAt
  user_id                     String
  company_id                  String
  commissions                 commissions[]
  forecasts                   forecasts[]
  company                     companies     @relation(fields: [company_id], references: [id])
  team                        teams?        @relation(fields: [team_id], references: [id])
  user                        users         @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@index([period_start, period_end])
  @@index([period_type])
  @@index([team_target])
  @@index([team_id])
  @@index([user_id, period_start, period_end])
  @@index([company_id, is_active])
}

model commissions {
  id                 String               @id @default(cuid())
  period_start       DateTime
  period_end         DateTime
  quota_amount       Decimal              @db.Decimal(12, 2)
  actual_amount      Decimal              @db.Decimal(12, 2)
  attainment_pct     Decimal              @db.Decimal(5, 2)
  commission_rate    Decimal              @db.Decimal(5, 4)
  commission_earned  Decimal              @db.Decimal(12, 2)
  base_commission    Decimal              @db.Decimal(12, 2)
  bonus_commission   Decimal              @default(0) @db.Decimal(12, 2)
  status             String               @default("calculated")
  calculated_at      DateTime             @default(now())
  approved_at        DateTime?
  approved_by        String?
  paid_at            DateTime?
  ai_insights        Json?
  commission_type    String               @default("actual")
  last_calculated_at DateTime             @default(now())
  calculation_trigger String?
  created_at         DateTime             @default(now())
  updated_at         DateTime             @updatedAt
  user_id            String
  company_id         String
  target_id          String
  commission_details commission_details[]
  company            companies            @relation(fields: [company_id], references: [id])
  target             targets              @relation(fields: [target_id], references: [id])
  user               users                @relation(fields: [user_id], references: [id])

  @@unique([user_id, period_start, period_end, commission_type])
  @@index([user_id])
  @@index([period_start, period_end])
  @@index([status])
  @@index([commission_type])
  @@index([last_calculated_at])
}

model commission_details {
  id                String      @id @default(cuid())
  commission_amount Decimal     @db.Decimal(12, 2)
  created_at        DateTime    @default(now())
  commission_id     String
  deal_id           String
  commission        commissions @relation(fields: [commission_id], references: [id])
  deal              deals       @relation(fields: [deal_id], references: [id])

  @@index([commission_id])
  @@index([deal_id])
}

model forecasts {
  id                 String    @id @default(cuid())
  forecast_date      DateTime  @default(now())
  forecast_type      String
  pipeline_amount    Decimal   @default(0) @db.Decimal(12, 2)
  commit_amount      Decimal   @default(0) @db.Decimal(12, 2)
  best_case_amount   Decimal   @default(0) @db.Decimal(12, 2)
  closed_amount      Decimal   @default(0) @db.Decimal(12, 2)
  ai_predicted_close Decimal   @default(0) @db.Decimal(12, 2)
  ai_confidence      Decimal   @default(0) @db.Decimal(5, 2)
  actual_closed      Decimal?  @db.Decimal(12, 2)
  forecast_accuracy  Decimal?  @db.Decimal(5, 2)
  created_at         DateTime  @default(now())
  user_id            String
  company_id         String
  target_id          String
  company            companies @relation(fields: [company_id], references: [id])
  target             targets   @relation(fields: [target_id], references: [id])
  user               users     @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@index([forecast_date])
  @@index([forecast_type])
  @@index([target_id])
}

model crm_integrations {
  id                    String    @id @default(cuid())
  crm_type              String
  access_token          String?
  refresh_token         String?
  instance_url          String?
  is_active             Boolean   @default(true)
  last_sync             DateTime?
  sync_frequency        String    @default("daily")
  spreadsheet_id        String?
  sheet_name            String?
  header_row            Int       @default(1)
  data_start_row        Int       @default(2)
  column_mapping        Json?
  ai_enabled            Boolean   @default(false)
  ai_model_version      String?
  total_deals_synced    Int       @default(0)
  last_sync_deals_count Int       @default(0)
  sync_errors           Json?
  created_at            DateTime  @default(now())
  updated_at            DateTime  @updatedAt
  company_id            String
  company               companies @relation(fields: [company_id], references: [id])

  @@index([company_id])
  @@index([crm_type])
}

model activity_log {
  id               String    @id @default(cuid())
  action           String
  entity_type      String
  entity_id        String
  before_state     Json?
  after_state      Json?
  context          Json?
  response_time_ms Int?
  success          Boolean   @default(true)
  error_message    String?
  created_at       DateTime  @default(now())
  user_id          String
  company_id       String
  company          companies @relation(fields: [company_id], references: [id])
  user             users     @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@index([company_id])
  @@index([created_at])
  @@index([action])
  @@index([entity_type, entity_id])
}

model teams {
  id                  String         @id @default(cuid())
  team_name           String
  description         String?
  default_role        String?
  default_sub_role    String?
  is_active           Boolean        @default(true)
  created_at          DateTime       @default(now())
  updated_at          DateTime       @updatedAt
  company_id          String
  team_lead_id        String?
  created_by_admin_id String
  targets             targets[]
  team_members        team_members[]
  company             companies      @relation(fields: [company_id], references: [id], onDelete: Cascade)
  created_by_admin    users          @relation("TeamCreator", fields: [created_by_admin_id], references: [id])
  team_lead           users?         @relation("TeamLead", fields: [team_lead_id], references: [id])

  @@unique([company_id, team_name])
  @@index([company_id])
  @@index([team_lead_id])
  @@index([is_active])
}

model team_members {
  id                String   @id @default(cuid())
  role_override     String?
  sub_role_override String?
  joined_date       DateTime @default(now())
  is_active         Boolean  @default(true)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  team_id           String
  user_id           String
  added_by_admin_id String
  added_by_admin    users    @relation("TeamMemberAdder", fields: [added_by_admin_id], references: [id])
  team              teams    @relation(fields: [team_id], references: [id], onDelete: Cascade)
  user              users    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, team_id])
  @@index([team_id])
  @@index([user_id])
  @@index([is_active])
}
